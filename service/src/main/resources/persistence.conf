akka.projection.jdbc {
  dialect = postgres-dialect
  blocking-jdbc-dispatcher.thread-pool-executor.fixed-pool-size = 20
}

jdbc-connection {
  driver = org.postgresql.Driver
  url = "jdbc:postgresql://localhost:5432/jourei-crawler-dev"
  user = crawler
  password = crawler

  connection-pool {
    max-pool-size = ${akka.projection.jdbc.blocking-jdbc-dispatcher.thread-pool-executor.fixed-pool-size}
    timeout = 250ms
  }
}

akka-persistence-jdbc {
  shared-databases {
    default {
      # the slick profile must be compatible with the configured jdbc-connection-settings.driver
      # possible choices are:
      #  - slick.jdbc.PostgresProfile$
      #  - slick.jdbc.MySQLProfile$
      #  - slick.jdbc.H2Profile$
      #  - slick.jdbc.SQLServerProfile$
      #  - slick.jdbc.OracleProfile$
      profile: "slick.jdbc.PostgresProfile$"
      db {
        host: "localhost"
        url: ${jdbc-connection.url}
        user: ${jdbc-connection.user}
        password: ${jdbc-connection.password}
        driver: ${jdbc-connection.driver}
        numThreads: 5
        maxConnections: 5
        minConnections: 1
      }
    }
  }
}

jdbc-journal {
  use-shared-db = "default"
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  use-shared-db = "default"
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  use-shared-db = "default"
}

akka {
  # use JDBC plugin to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "jdbc-journal"
    auto-start-journals = ["jdbc-journal"]

    snapshot-store.plugin = "jdbc-snapshot-store"
    auto-start-snapshot-stores = ["jdbc-snapshot-store"]
  }

  projection {
    jdbc.blocking-jdbc-dispatcher.thread-pool-executor.fixed-pool-size = 10
    jdbc.dialect = postgres-dialect
  }
}

